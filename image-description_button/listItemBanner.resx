<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAALQAAADmCAYAAAB8i6/OAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAACGZJREFUeF7t3Ql2E8cWgOFeAkvwUoQzGSQbGQ/YRmAZO4EwBYVpGfYOYEdagpfS
        1O1Wy1WtaqlaIid97/l9zvc09CDxzp+b0oCT1X96Jzu9+6cPb5zb+6f9HOig6fZZ/1vvZLg1y3bxpzcc
        3ts+7V8XB5z5BkDHzNp0rW4/7V/3hr17s4zLH4nZ7TCdH/B04HaM2Y2IbfNvNx0nUs5Zv1x23Sf3+8c2
        7RcT2zd2jup20/2rttXvix0X2z9Fm+Nk3/r+sfuq++v3+ZZt97dV1+XSv950GZq3WgY+DaJ2B13fRexO
        MNrNfxHP9oBuGYmy0Sr2st3+dRFzbzzcKkIuIi4P+vX5o9L5MP8N6BBpsuqzDPwu7N7JoJe5ur9X01h2
        Kg4c7+e/X4jH+R8vfAdriB237rl8qedYtd+m28Wyffxt1fX6/qnHtyXHph4f22/dx97kOTeZ/Vlck0Wb
        rtEi8HnYe/n90eAm2x7tTauQZSc5aOfyIH9wdZg/+POo9NdR/jBw3HBZv76JtufZ9HHl+HXPsey4TZ/X
        fyHlOf3M512dq37O9MeQBuc9ujZ3Lg+LVmth32bzmF35O7OIH748zvuvnuSDv09Kr08b7TZcXya2X/08
        1e2mff19Yttjl6mW7Z96rlX7tX1OFf84uV7drl+2VT+vv626r1LfVlm27aeY9ShtSqPSqjQr7VZRZ37M
        8k+M7CxPbO/NWb739mn+6N0I6A7XpHQpjfZfnRTNSrsyraXlzI9Z6t91IcuBw3+e5fsfns+c5/uT8/yx
        U1361+Wyfj12ex3+Y1W3/Uvfqsfzz+Vf97f7t+v3xbY3qfZddUybc9bVj23zWNX12DGrztOkflzsMeS6
        f7+/zVffr7hfOnQ9SpuP3o9c2GdFszKtq0mdyVqkill2GLod5SA5ycG/4/zg4wXQEdLjOH/suizCfv+s
        mNZF1DKpXcuZrENkdMtkrmKWkA8/XTgv8sPPL/Kjn6g63zrnbXNMyr7+Pus8H7HJOVL33/S8y46PbVv1
        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
        T5b9AF0jXO3KHBKvAAAAAElFTkSuQmCC
</value>
  </data>
</root>