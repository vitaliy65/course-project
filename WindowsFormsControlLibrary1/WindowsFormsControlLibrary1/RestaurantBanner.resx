<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>